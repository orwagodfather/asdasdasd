 <exceptionHandling>
    <exceptionPolicies>
      <!-- SystemExceptionPolicy it log the Exception and rethrow same exception type -->
      <add name="GeneralSystemExceptionPolicy">
        <exceptionTypes>
          <!-- type defines that it is AhmSystemException type exception -->
          <!-- postHandlingAction="NotifyRethrow" property defines that rethrow the exception -->
          <add type="b2c.ApplicationBlocks.ExceptionManagement.AhmSystemException,b2c.ApplicationBlocks.ExceptionManagement, Version=2.0.0.0, Culture=neutral, PublicKeyToken=c9e2f078758b554e" postHandlingAction="NotifyRethrow" name="AhmSystemException">
          </add>
        </exceptionTypes>
      </add>
      <!-- SystemExceptionPolicy it log the Exception and rethrow same exception type -->
      <add name="SystemExceptionPolicy">
        <exceptionTypes>
          <!-- type defines that it is AhmSystemException type exception -->
          <!-- postHandlingAction="NotifyRethrow" property defines that rethrow the exception -->
          <add type="b2c.ApplicationBlocks.ExceptionManagement.AhmSystemException,b2c.ApplicationBlocks.ExceptionManagement, Version=2.0.0.0, Culture=neutral, PublicKeyToken=c9e2f078758b554e" postHandlingAction="NotifyRethrow" name="AhmSystemException">
            <exceptionHandlers>
              <add logCategory="General" eventId="1001" severity="Error" title="SystemException Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" name="SystemException Handler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <!-- BusinessExceptionPolicy doesn't log the Exception but rethrow exception of BusinessException type-->
      <add name="BusinessExceptionPolicy">
        <!-- type defines that it is BusinessException type exception -->
        <!-- postHandlingAction="NotifyRethrow" property defines that rethrow the exception -->
        <exceptionTypes>
          <add type="b2c.ApplicationBlocks.ExceptionManagement.BusinessException, b2c.ApplicationBlocks.ExceptionManagement, Version=2.0.0.0, Culture=neutral, PublicKeyToken=c9e2f078758b554e" postHandlingAction="NotifyRethrow" name="BusinessException">
          </add>
        </exceptionTypes>
      </add>
      <!-- SecureExceptionPolicy log,throw  the Exception of same type but rethrow with new message -->
      <add name="SecureExceptionPolicy">
        <!-- type defines that it is BusinessException type exception -->
        <!-- postHandlingAction="NotifyRethrow" property defines that rethrow the exception -->
        <exceptionTypes>
          <add type="b2c.ApplicationBlocks.ExceptionManagement.BusinessException, b2c.ApplicationBlocks.ExceptionManagement, Version=2.0.0.0, Culture=neutral, PublicKeyToken=c9e2f078758b554e" postHandlingAction="NotifyRethrow" name="SecureException">
            <exceptionHandlers>
              <add logCategory="General" eventId="1009" severity="Error" title="SecureException Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" name="SecureException Handler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <!-- InternalExceptionPolicy it log the Exception but doesn't rethrow the exception -->
      <add name="InternalExceptionPolicy">
        <exceptionTypes>
          <!-- type defines that it is AhmSystemException type exception -->
          <!-- postHandlingAction="None" property defines that doesn't rethrow the exception -->
          <add type="b2c.ApplicationBlocks.ExceptionManagement.AhmSystemException, b2c.ApplicationBlocks.ExceptionManagement, Version=2.0.0.0, Culture=neutral, PublicKeyToken=c9e2f078758b554e" postHandlingAction="None" name="AhmSystemException">
            <exceptionHandlers>
              <add logCategory="General" eventId="1001" severity="Error" title="InternalException Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" name="InternalException Handler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <!-- IISExceptionPolicy it log the Exception but doesn't rethrow the exception -->
      <add name="IISExceptionPolicy">
        <exceptionTypes>
          <!-- type defines that it is AhmSystemException type exception -->
          <!-- postHandlingAction="None" property defines that doesn't rethrow the exception -->
          <add type="b2c.ApplicationBlocks.ExceptionManagement.IISException, b2c.ApplicationBlocks.ExceptionManagement, Version=2.0.0.0, Culture=neutral, PublicKeyToken=c9e2f078758b554e" postHandlingAction="None" name="IISException">
            <exceptionHandlers>
              <add logCategory="General" eventId="9000" severity="Error" title="IISExceptionPolicy Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" name="IISExceptionPolicy Handler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="EventLoggerPolicy">
        <exceptionTypes>
          <add name="Exception" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add logCategory="Event Log Destination" eventId="9999" severity="Error" title="AhmExceptionFramework Error" priority="0" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" name="AhmExceptionFramework Handler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="EmailLoggerPolicy">
        <exceptionTypes>
          <add name="Exception" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add logCategory="Email Log Destination" eventId="9999" severity="Error" title="AhmExceptionFramework Error" priority="0" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0094870d88e0342c" name="AhmExceptionFramework Email Handler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>